{"ast":null,"code":"// GenerateCalendar.tsx\n\nconst generateCalendar = selectedDate => {\n  const getDaysInMonth = (year, month) => {\n    return new Date(year, month + 1, 0).getDate();\n  };\n  const getStartDayOfMonth = (year, month) => {\n    return new Date(year, month, 1).getDay();\n  };\n  const currentDate = new Date();\n  const todayFormatted = currentDate.toISOString().split(\"T\")[0];\n  const daysInMonth = getDaysInMonth(selectedDate.getFullYear(), selectedDate.getMonth());\n  const startDay = getStartDayOfMonth(selectedDate.getFullYear(), selectedDate.getMonth());\n  const calendarDays = [];\n\n  // Calculate the previous month's overflow days\n  const prevMonth = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 0);\n  const daysInPrevMonth = getDaysInMonth(prevMonth.getFullYear(), prevMonth.getMonth());\n  for (let i = daysInPrevMonth - startDay + 1; i <= daysInPrevMonth; i++) {\n    const date = new Date(prevMonth.getFullYear(), prevMonth.getMonth(), i);\n    calendarDays.push({\n      date: i,\n      isToday: date.toISOString().split(\"T\")[0] === todayFormatted,\n      fullDate: date.toISOString().split(\"T\")[0],\n      currentMonth: false,\n      day: date.toLocaleDateString(\"en-US\", {\n        weekday: \"short\"\n      })\n    });\n  }\n\n  // Fill in the current month's days\n  for (let i = 1; i <= daysInMonth; i++) {\n    const date = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), i);\n    calendarDays.push({\n      date: i,\n      isToday: date.toISOString().split(\"T\")[0] === todayFormatted,\n      fullDate: date.toISOString().split(\"T\")[0],\n      currentMonth: true,\n      day: date.toLocaleDateString(\"en-US\", {\n        weekday: \"short\"\n      })\n    });\n  }\n\n  // Calculate the next month's overflow days to make the total length up to 42\n  const nextMonth = new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 1);\n  for (let i = 1; calendarDays.length < 42; i++) {\n    const date = new Date(nextMonth.getFullYear(), nextMonth.getMonth(), i);\n    calendarDays.push({\n      date: i,\n      isToday: date.toISOString().split(\"T\")[0] === todayFormatted,\n      fullDate: date.toISOString().split(\"T\")[0],\n      currentMonth: false,\n      day: date.toLocaleDateString(\"en-US\", {\n        weekday: \"short\"\n      })\n    });\n  }\n  return calendarDays;\n};\nexport default generateCalendar;","map":{"version":3,"names":["generateCalendar","selectedDate","getDaysInMonth","year","month","Date","getDate","getStartDayOfMonth","getDay","currentDate","todayFormatted","toISOString","split","daysInMonth","getFullYear","getMonth","startDay","calendarDays","prevMonth","daysInPrevMonth","i","date","push","isToday","fullDate","currentMonth","day","toLocaleDateString","weekday","nextMonth","length"],"sources":["/Users/mustafizur/Codes/tvs/calendar-event-backend/frontend/src/components/datePicker/GenerateCalendar.tsx"],"sourcesContent":["// GenerateCalendar.tsx\nexport interface CalendarDay {\n  date: number;\n  isToday: boolean;\n  fullDate: string;\n  currentMonth: boolean;\n  day: string;\n}\n\nconst generateCalendar = (selectedDate: Date): CalendarDay[] => {\n  const getDaysInMonth = (year: number, month: number) => {\n    return new Date(year, month + 1, 0).getDate();\n  };\n\n  const getStartDayOfMonth = (year: number, month: number) => {\n    return new Date(year, month, 1).getDay();\n  };\n\n  const currentDate = new Date();\n\n  const todayFormatted = currentDate.toISOString().split(\"T\")[0];\n\n  const daysInMonth = getDaysInMonth(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth()\n  );\n  const startDay = getStartDayOfMonth(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth()\n  );\n\n  const calendarDays: CalendarDay[] = [];\n\n  // Calculate the previous month's overflow days\n  const prevMonth = new Date(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth(),\n    0\n  );\n  const daysInPrevMonth = getDaysInMonth(\n    prevMonth.getFullYear(),\n    prevMonth.getMonth()\n  );\n  for (let i = daysInPrevMonth - startDay + 1; i <= daysInPrevMonth; i++) {\n    const date = new Date(prevMonth.getFullYear(), prevMonth.getMonth(), i);\n    calendarDays.push({\n      date: i,\n      isToday: date.toISOString().split(\"T\")[0] === todayFormatted,\n      fullDate: date.toISOString().split(\"T\")[0],\n      currentMonth: false,\n      day: date.toLocaleDateString(\"en-US\", { weekday: \"short\" }),\n    });\n  }\n\n  // Fill in the current month's days\n  for (let i = 1; i <= daysInMonth; i++) {\n    const date = new Date(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth(),\n      i\n    );\n    calendarDays.push({\n      date: i,\n      isToday: date.toISOString().split(\"T\")[0] === todayFormatted,\n      fullDate: date.toISOString().split(\"T\")[0],\n      currentMonth: true,\n      day: date.toLocaleDateString(\"en-US\", { weekday: \"short\" }),\n    });\n  }\n\n  // Calculate the next month's overflow days to make the total length up to 42\n  const nextMonth = new Date(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth() + 1,\n    1\n  );\n  for (let i = 1; calendarDays.length < 42; i++) {\n    const date = new Date(nextMonth.getFullYear(), nextMonth.getMonth(), i);\n    calendarDays.push({\n      date: i,\n      isToday: date.toISOString().split(\"T\")[0] === todayFormatted,\n      fullDate: date.toISOString().split(\"T\")[0],\n      currentMonth: false,\n      day: date.toLocaleDateString(\"en-US\", { weekday: \"short\" }),\n    });\n  }\n\n  return calendarDays;\n};\n\nexport default generateCalendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}