{"ast":null,"code":"var _jsxFileName = \"/Users/mustafizur/Codes/tvs/calendar-event-backend/frontend/src/views/Monthly.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GenerateCalendar from \"../components/datePicker/GenerateCalendar\";\nimport { useCalendar } from \"../context/CalendarContext\";\nimport { getDatesInRange } from \"../components/common/common\";\nimport ViewEvent from \"../components/event/ViewEvent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MonthlyView = () => {\n  _s();\n  const {\n    currentDate\n  } = useCalendar();\n  const calendarDays = GenerateCalendar(currentDate);\n  const [events, setEvents] = useState([]);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [selectedEventId, setSelectedEventId] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/events\").then(response => response.json()).then(data => {\n      const newEvents = data.reduce((acc, event) => {\n        // Convert startDate and endDate to 'YYYY-MM-DD' format\n        const formattedStartDate = event.startDate.split(\"T\")[0];\n        const formattedEndDate = event.endDate ? event.endDate.split(\"T\")[0] : undefined;\n        const range = formattedEndDate && formattedEndDate !== formattedStartDate ? getDatesInRange(formattedStartDate, formattedEndDate) : [formattedStartDate];\n        range.forEach(date => {\n          if (!acc[date]) {\n            acc[date] = [];\n          }\n          acc[date].push({\n            ...event,\n            startDate: date,\n            // Already formatted above\n            endDate: formattedEndDate,\n            // Apply the formatted endDate\n            ...(event.isFullDay ? {\n              startTime: undefined,\n              endTime: undefined\n            } : {})\n          });\n        });\n        return acc;\n      }, {});\n      setEvents(Object.values(newEvents).flat());\n    }).catch(console.error);\n  }, []);\n\n  // Use the `useState` hook with the correct type\n\n  const handleEventClick = eventId => {\n    setSelectedEventId(eventId);\n    setModalOpen(true);\n  };\n  const modalContent = isModalOpen && selectedEventId && /*#__PURE__*/_jsxDEV(ViewEvent, {\n    eventId: selectedEventId,\n    isOpen: isModalOpen,\n    onClose: () => setModalOpen(false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded-lg shadow h-full mb-12 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-7 text-center border-b\",\n        children: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-2 font-medium\",\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-7 h-full border-b\",\n        children: calendarDays.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 w-full text-center border ${!day.currentMonth && \"text-gray-400\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-sm ${day.isToday ? \"border-2 border-sky-600 rounded-3xl text-center\" : \"\"} ${day.isToday && \"font-semibold\"}`,\n            children: day.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), events.find(event => event.startDate === day.fullDate || event.endDate === day.fullDate) && events.filter(event => event.startDate === day.fullDate).map((event, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleEventClick(event._id),\n            className: \"text-left text-xs mt-1\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-white p-1 rounded ${event.isFullDay ? \"bg-green-600\" : \"bg-sky-600\"}`,\n              children: [event.title, \" -\", \" \", event.isFullDay ? \"All day\" : `${event.startTime || \"Start\"} to ${event.endTime || \"End\"}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 23\n            }, this)\n          }, `${event._id}-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), modalContent && document.getElementById(\"modal-root\") && /*#__PURE__*/ReactDOM.createPortal(modalContent, document.getElementById(\"modal-root\"))]\n  }, void 0, true);\n};\n_s(MonthlyView, \"+ZyDkL0kyFLer+z+A4RbKN18tD4=\", false, function () {\n  return [useCalendar];\n});\n_c = MonthlyView;\nexport default MonthlyView;\nvar _c;\n$RefreshReg$(_c, \"MonthlyView\");","map":{"version":3,"names":["useEffect","useState","ReactDOM","GenerateCalendar","useCalendar","getDatesInRange","ViewEvent","jsxDEV","_jsxDEV","Fragment","_Fragment","MonthlyView","_s","currentDate","calendarDays","events","setEvents","isModalOpen","setModalOpen","selectedEventId","setSelectedEventId","fetch","then","response","json","data","newEvents","reduce","acc","event","formattedStartDate","startDate","split","formattedEndDate","endDate","undefined","range","forEach","date","push","isFullDay","startTime","endTime","Object","values","flat","catch","console","error","handleEventClick","eventId","modalContent","isOpen","onClose","fileName","_jsxFileName","lineNumber","columnNumber","children","className","map","day","index","currentMonth","isToday","find","fullDate","filter","idx","onClick","_id","title","document","getElementById","createPortal","_c","$RefreshReg$"],"sources":["/Users/mustafizur/Codes/tvs/calendar-event-backend/frontend/src/views/Monthly.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GenerateCalendar from \"../components/datePicker/GenerateCalendar\";\nimport { useCalendar } from \"../context/CalendarContext\";\nimport { getDatesInRange } from \"../components/common/common\";\nimport ViewEvent from \"../components/event/ViewEvent\";\n\nconst MonthlyView = () => {\n  const { currentDate } = useCalendar();\n  const calendarDays = GenerateCalendar(currentDate);\n  const [events, setEvents] = useState<Event[]>([]);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [selectedEventId, setSelectedEventId] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/events\")\n      .then((response) => response.json())\n      .then((data: Event[]) => {\n        const newEvents: EventsByDate = data.reduce(\n          (acc: EventsByDate, event: Event) => {\n            // Convert startDate and endDate to 'YYYY-MM-DD' format\n            const formattedStartDate = event.startDate.split(\"T\")[0];\n            const formattedEndDate = event.endDate\n              ? event.endDate.split(\"T\")[0]\n              : undefined;\n\n            const range: string[] =\n              formattedEndDate && formattedEndDate !== formattedStartDate\n                ? getDatesInRange(formattedStartDate, formattedEndDate)\n                : [formattedStartDate];\n\n            range.forEach((date) => {\n              if (!acc[date]) {\n                acc[date] = [];\n              }\n              acc[date].push({\n                ...event,\n                startDate: date, // Already formatted above\n                endDate: formattedEndDate, // Apply the formatted endDate\n                ...(event.isFullDay\n                  ? { startTime: undefined, endTime: undefined }\n                  : {}),\n              });\n            });\n\n            return acc;\n          },\n          {}\n        );\n\n        setEvents(Object.values(newEvents).flat());\n      })\n      .catch(console.error);\n  }, []);\n\n  interface CalendarDay {\n    date: number; \n    isToday: boolean; \n    fullDate: string; \n    currentMonth: boolean; // Indicates if this day is in the current month\n    day: string;\n    // ... any other properties that a day object might have\n  }\n\n  interface EventsByDate {\n    [date: string]: Event[]; // This defines an index signature for the object\n  }\n  // Use the `useState` hook with the correct type\n\n  interface Event {\n    _id: string; // Using _id instead of id as per Mongoose schema\n    title: string;\n    description?: string;\n    startDate: string; // ISO date string, e.g., \"2023-12-25\"\n    endDate?: string; // ISO date string, e.g., \"2023-12-25\"\n    startTime?: string; // Optional start time as a string, e.g., \"10:00\"\n    endTime?: string; // Optional end time as a string, e.g., \"11:00\"\n    isFullDay: boolean;\n    repeat?: \"none\" | \"daily\" | \"weekly\" | \"monthly\" | \"yearly\";\n    repeatCycle?: number;\n  }\n\n  const handleEventClick = (eventId: string) => {\n    setSelectedEventId(eventId);\n    setModalOpen(true);\n  };\n\n  const modalContent = isModalOpen && selectedEventId && (\n    <ViewEvent\n      eventId={selectedEventId}\n      isOpen={isModalOpen}\n      onClose={() => setModalOpen(false)}\n    />\n  );\n  return (\n    <>\n      <div className=\"rounded-lg shadow h-full mb-12 overflow-hidden\">\n        <div className=\"grid grid-cols-7 text-center border-b\">\n          {[\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"].map((day) => (\n            <div key={day} className=\"px-4 py-2 font-medium\">\n              {day}\n            </div>\n          ))}\n        </div>\n        <div className=\"grid grid-cols-7 h-full border-b\">\n          {calendarDays.map((day: CalendarDay, index: number) => (\n            <div\n              key={index}\n              className={`p-4 w-full text-center border ${\n                !day.currentMonth && \"text-gray-400\"\n              }`}\n            >\n              <div\n                className={`text-sm ${\n                  day.isToday\n                    ? \"border-2 border-sky-600 rounded-3xl text-center\"\n                    : \"\"\n                } ${day.isToday && \"font-semibold\"}`}\n              >\n                {day.date}\n              </div>\n              {events.find(\n                (event) =>\n                  event.startDate === day.fullDate ||\n                  event.endDate === day.fullDate\n              ) &&\n                events\n                  .filter((event) => event.startDate === day.fullDate)\n                  .map((event, idx) => (\n                    <div\n                      key={`${event._id}-${idx}`}\n                      onClick={() => handleEventClick(event._id)}\n                      className=\"text-left text-xs mt-1\"\n                    >\n                      <p\n                        className={`text-white p-1 rounded ${\n                          event.isFullDay ? \"bg-green-600\" : \"bg-sky-600\"\n                        }`}\n                      >\n                        {event.title} -{\" \"}\n                        {event.isFullDay\n                          ? \"All day\"\n                          : `${event.startTime || \"Start\"} to ${\n                              event.endTime || \"End\"\n                            }`}\n                      </p>\n                    </div>\n                  ))}\n            </div>\n          ))}\n        </div>\n      </div>\n      {modalContent &&\n        document.getElementById(\"modal-root\") &&\n        ReactDOM.createPortal(\n          modalContent,\n          document.getElementById(\"modal-root\") as Element\n        )}\n    </>\n  );\n};\n\nexport default MonthlyView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}