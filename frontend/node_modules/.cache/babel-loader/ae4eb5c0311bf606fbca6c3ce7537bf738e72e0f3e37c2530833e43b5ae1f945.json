{"ast":null,"code":"var _jsxFileName = \"/app/src/context/ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext({\n  theme: \"light\",\n  toggleTheme: () => {}\n});\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setTheme] = useState(\"light\");\n\n  // Read theme from localStorage when component mounts\n  useEffect(() => {\n    const storedTheme = localStorage.getItem(\"theme\");\n    if (storedTheme) {\n      setTheme(storedTheme);\n    }\n  }, []);\n\n  // Effect for applying the theme and saving to localStorage\n  useEffect(() => {\n    document.documentElement.setAttribute(\"data-theme\", theme);\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === \"light\" ? \"dark\" : \"light\");\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"+6C7zX0KFXKdtXxqQH7LMHLz9vo=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","theme","toggleTheme","useTheme","_s","ThemeProvider","children","_s2","setTheme","storedTheme","localStorage","getItem","document","documentElement","setAttribute","setItem","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/context/ThemeContext.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  ReactNode,\n} from \"react\";\n\ninterface ThemeContextType {\n  theme: string;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType>({\n  theme: \"light\",\n  toggleTheme: () => {},\n});\n\ninterface ThemeProviderProps {\n  children: ReactNode; // Typing the children prop\n}\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  const [theme, setTheme] = useState(\"light\");\n\n  // Read theme from localStorage when component mounts\n  useEffect(() => {\n    const storedTheme = localStorage.getItem(\"theme\");\n    if (storedTheme) {\n      setTheme(storedTheme);\n    }\n  }, []);\n\n  // Effect for applying the theme and saving to localStorage\n  useEffect(() => {\n    document.documentElement.setAttribute(\"data-theme\", theme);\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,SAAS,EACTC,QAAQ,QAEH,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOf,MAAMC,YAAY,gBAAGN,aAAa,CAAmB;EACnDO,KAAK,EAAE,OAAO;EACdC,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;AAMF,OAAO,MAAMC,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMT,UAAU,CAACK,YAAY,CAAC;AAAA;AAACI,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3E,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;;EAE3C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMa,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACfD,QAAQ,CAACC,WAAW,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAb,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEb,KAAK,CAAC;IAC1DS,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEd,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBM,QAAQ,CAAEQ,SAAS,IAAMA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACrE,CAAC;EAED,oBACEjB,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,KAAK;MAAEC;IAAY,CAAE;IAAAI,QAAA,EAClDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACf,GAAA,CA1BWF,aAA2C;AAAAkB,EAAA,GAA3ClB,aAA2C;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}